services:
  postgres:
    image: postgres:15-alpine
    environment:
      POSTGRES_USER: supplychain
      POSTGRES_PASSWORD: supplychain123
      POSTGRES_DB: supplychain
    ports:
      - "5433:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U supplychain"]
      interval: 10s
      timeout: 5s
      retries: 5

  nats:
    image: nats:2-alpine
    ports:
      - "4222:4222"
      - "8222:8222"
    command: ["--jetstream"]
    healthcheck:
      test: ["CMD", "/bin/sh", "-c", "nc -z localhost 4222"]
      interval: 10s
      timeout: 5s
      retries: 5

  inventory-service:
    build:
      context: ../..
      dockerfile: build/inventory/Dockerfile
    environment:
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_USER=supplychain
      - DB_PASSWORD=supplychain123
      - DB_NAME=supplychain
      - NATS_URL=nats://nats:4222
    depends_on:
      postgres:
        condition: service_healthy
      nats:
        condition: service_healthy
    ports:
      - "8080:8080"

  shipment-service:
    build:
      context: ../..
      dockerfile: build/shipment/Dockerfile
    environment:
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_USER=supplychain
      - DB_PASSWORD=supplychain123
      - DB_NAME=supplychain
      - NATS_URL=nats://nats:4222
    depends_on:
      postgres:
        condition: service_healthy
      nats:
        condition: service_healthy
    ports:
      - "8081:8080"

  api-gateway:
    build:
      context: ../..
      dockerfile: build/gateway/Dockerfile
    environment:
      - INVENTORY_SERVICE_URL=http://inventory-service:8080
      - SHIPMENT_SERVICE_URL=http://shipment-service:8080
    ports:
      - "3000:3000"
    depends_on:
      - inventory-service
      - shipment-service

volumes:
  postgres_data:
